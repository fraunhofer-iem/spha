/*
 * Copyright (c) 2024-2025 Fraunhofer IEM. All rights reserved.
 *
 * Licensed under the MIT license. See LICENSE file in the project root for details.
 *
 * SPDX-License-Identifier: MIT
 * License-Filename: LICENSE
 */

package de.fraunhofer.iem.spha.adapter.kpis.cve

import de.fraunhofer.iem.spha.model.kpi.KpiType
import de.fraunhofer.iem.spha.model.kpi.RawValueKpi
import java.util.UUID

/**
 * Creates a RawValueKpi for a given vulnerability score and typeId.
 *
 * @param score The vulnerability severity score (0.0 to 10.0)
 * @param typeId The type identifier for the KPI
 * @param originId Optional identifier connecting this KPI to its origin
 * @return A RawValueKpi with the calculated score
 */
fun transformVulnerabilityToKpi(
    score: Double,
    typeId: KpiType,
    originId: String? = UUID.randomUUID().toString(),
): RawValueKpi? {

    if (score !in 0.0..10.0) {
        return null
    }

    // Convert vulnerability score (0-10) to KPI score (0-100)
    // Higher vulnerability severity means a lower KPI score
    val kpiScore = 100 - (score * 10).toInt()
    return RawValueKpi(typeId = typeId.name, score = kpiScore, originId = originId)
}
